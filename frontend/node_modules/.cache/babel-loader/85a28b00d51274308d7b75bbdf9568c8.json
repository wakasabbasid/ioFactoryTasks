{"ast":null,"code":"var _jsxFileName = \"/Users/wakasabbasid/Desktop/IMDB/frontend/src/components/movieTable.js\";\nimport React from \"react\";\nimport Table from \"./table\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:4000/api/movies\";\n\nclass MovieTable extends Table {\n  /**\n   * This function gets a movie search page from the backend.\n   * @param page The page in question.\n   * @return The page as a list of objects.\n   */\n  async getPage(page) {\n    const link = this.props.search ? \"&\" : \"?\";\n    const result = await fetch(BASE_URL + this.props.search + link + \"page=\" + page, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    const response = await result.json();\n    return response[\"data\"][\"movies\"];\n  }\n  /**\n   * This function formats the head of the table.\n   */\n\n\n  formatHead() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Votes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n  /**\n   * Function populates a row of the table with an Movie object.\n   * @param The movie to format.\n   * @return {JSX.Element} The formatted row of the table.\n   */\n\n\n  formatRow(_ref) {\n    let {\n      movie_uri,\n      image_url,\n      title,\n      year,\n      users_rating,\n      votes\n    } = _ref;\n    let movieRoute = \"/movie-details/\" + movie_uri.split(\"/\").slice(-1)[0];\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 75\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: movieRoute,\n            children: image_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"h-100\",\n              src: image_url,\n              alt: \"missing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 100\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"align-middle\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: movieRoute,\n          className: \"text-dark\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"align-middle\",\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"align-middle\",\n        children: users_rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"align-middle\",\n        children: votes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, movie_uri, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MovieTable;","map":{"version":3,"names":["React","Table","Link","BASE_URL","MovieTable","getPage","page","link","props","search","result","fetch","headers","response","json","formatHead","formatRow","movie_uri","image_url","title","year","users_rating","votes","movieRoute","split","slice","height"],"sources":["/Users/wakasabbasid/Desktop/IMDB/frontend/src/components/movieTable.js"],"sourcesContent":["import React from \"react\";\nimport Table from \"./table\";\nimport {Link} from \"react-router-dom\";\n\nconst BASE_URL = \"http://localhost:4000/api/movies\";\n\nclass MovieTable extends Table {\n    /**\n     * This function gets a movie search page from the backend.\n     * @param page The page in question.\n     * @return The page as a list of objects.\n     */\n    async getPage(page) {\n        const link = (this.props.search) ? \"&\" : \"?\";\n        const result = await fetch(BASE_URL + this.props.search + link + \"page=\" + page, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        });\n        const response = await result.json();\n        return response[\"data\"][\"movies\"];\n    }\n\n    /**\n     * This function formats the head of the table.\n     */\n    formatHead() {\n        return (\n            <React.Fragment>\n                <th/>\n                <th>Title</th>\n                <th>Year</th>\n                <th>Rating</th>\n                <th>Votes</th>\n            </React.Fragment>\n        );\n    }\n\n    /**\n     * Function populates a row of the table with an Movie object.\n     * @param The movie to format.\n     * @return {JSX.Element} The formatted row of the table.\n     */\n    formatRow({movie_uri, image_url, title, year, users_rating, votes}) {\n        let movieRoute = \"/movie-details/\" + movie_uri.split(\"/\").slice(-1)[0];\n        return (\n            <tr key={movie_uri}>\n                <td className=\"text-center\">\n                    <div style={{height: 75}}>\n                        <Link to={movieRoute}>\n                            { image_url ? <img className=\"h-100\" src={image_url} alt=\"missing\"/> : <p>No Image</p>}\n                            \n                        </Link>\n                    </div>\n                </td>\n                <td className=\"align-middle\">\n                    <Link to={movieRoute} className=\"text-dark\">\n                        {title}\n                    </Link>\n                </td>\n                <td className=\"align-middle\">\n                    {year}\n                </td>\n                <td className=\"align-middle\">\n                    {users_rating}\n                </td>\n                <td className=\"align-middle\">\n                    {votes}\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default MovieTable;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,QAAQ,GAAG,kCAAjB;;AAEA,MAAMC,UAAN,SAAyBH,KAAzB,CAA+B;EAC3B;AACJ;AACA;AACA;AACA;EACiB,MAAPI,OAAO,CAACC,IAAD,EAAO;IAChB,MAAMC,IAAI,GAAI,KAAKC,KAAL,CAAWC,MAAZ,GAAsB,GAAtB,GAA4B,GAAzC;IACA,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAACR,QAAQ,GAAG,KAAKK,KAAL,CAAWC,MAAtB,GAA+BF,IAA/B,GAAsC,OAAtC,GAAgDD,IAAjD,EAAuD;MAC7EM,OAAO,EAAE;QACL,UAAU,kBADL;QAEL,gBAAgB;MAFX;IADoE,CAAvD,CAA1B;IAMA,MAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACI,IAAP,EAAvB;IACA,OAAOD,QAAQ,CAAC,MAAD,CAAR,CAAiB,QAAjB,CAAP;EACH;EAED;AACJ;AACA;;;EACIE,UAAU,GAAG;IACT,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA,wBACI;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EASH;EAED;AACJ;AACA;AACA;AACA;;;EACIC,SAAS,OAA2D;IAAA,IAA1D;MAACC,SAAD;MAAYC,SAAZ;MAAuBC,KAAvB;MAA8BC,IAA9B;MAAoCC,YAApC;MAAkDC;IAAlD,CAA0D;IAChE,IAAIC,UAAU,GAAG,oBAAoBN,SAAS,CAACO,KAAV,CAAgB,GAAhB,EAAqBC,KAArB,CAA2B,CAAC,CAA5B,EAA+B,CAA/B,CAArC;IACA,oBACI;MAAA,wBACI;QAAI,SAAS,EAAC,aAAd;QAAA,uBACI;UAAK,KAAK,EAAE;YAACC,MAAM,EAAE;UAAT,CAAZ;UAAA,uBACI,QAAC,IAAD;YAAM,EAAE,EAAEH,UAAV;YAAA,UACML,SAAS,gBAAG;cAAK,SAAS,EAAC,OAAf;cAAuB,GAAG,EAAEA,SAA5B;cAAuC,GAAG,EAAC;YAA3C;cAAA;cAAA;cAAA;YAAA,QAAH,gBAA4D;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAD3E;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAI,SAAS,EAAC,cAAd;QAAA,uBACI,QAAC,IAAD;UAAM,EAAE,EAAEK,UAAV;UAAsB,SAAS,EAAC,WAAhC;UAAA,UACKJ;QADL;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QATJ,eAcI;QAAI,SAAS,EAAC,cAAd;QAAA,UACKC;MADL;QAAA;QAAA;QAAA;MAAA,QAdJ,eAiBI;QAAI,SAAS,EAAC,cAAd;QAAA,UACKC;MADL;QAAA;QAAA;QAAA;MAAA,QAjBJ,eAoBI;QAAI,SAAS,EAAC,cAAd;QAAA,UACKC;MADL;QAAA;QAAA;QAAA;MAAA,QApBJ;IAAA,GAASL,SAAT;MAAA;MAAA;MAAA;IAAA,QADJ;EA0BH;;AAlE0B;;AAqE/B,eAAeb,UAAf"},"metadata":{},"sourceType":"module"}