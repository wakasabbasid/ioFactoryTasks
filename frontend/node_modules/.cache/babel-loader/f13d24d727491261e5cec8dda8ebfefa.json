{"ast":null,"code":"var _jsxFileName = \"/Users/wakasabbasid/Desktop/IMDB/frontend/src/pages/movieAddPage.js\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport fields from \"../components/fields.json\";\nimport Page from \"./page\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:4000/api/movies\";\n\nclass MovieAddPage extends Page {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movie: {\n        title: \"\",\n        rating: \"\",\n        year: \"\",\n        user_rating: \"\",\n        votes: \"\",\n        metascore: \"\",\n        img_url: \"\",\n        countries: \"\",\n        languages: \"\",\n        actors: \"\",\n        genre: \"\",\n        tagline: \"\",\n        description: \"\",\n        directors: \"\",\n        runtime: \"\",\n        imdb_url: \"\"\n      }\n    };\n\n    this.formatField = function (movie, _ref) {\n      let {\n        name,\n        prompt\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3 align-middle\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: prompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: name,\n              value: movie[name],\n              onChange: event => {\n                let newMovie = { ...movie\n                };\n                newMovie[name] = event.target.value;\n                this.setState({\n                  movie: newMovie\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, prompt + movie.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.formatBody = data => {\n      return JSON.stringify({\n        title: data.title,\n        rating: data.rating ? data.rating : undefined,\n        year: data.year ? data.year : undefined,\n        user_rating: data.users_rating ? data.users_rating : undefined,\n        votes: data.votes ? data.votes : undefined,\n        metascore: data.metascore ? data.metascore : undefined,\n        img_url: data.img_url ? data.img_url : undefined,\n        countries: data.countries ? data.countries : undefined,\n        languages: data.languages ? data.languages : undefined,\n        actors: data.actors ? data.actors : undefined,\n        genre: data.genre ? data.genre : undefined,\n        tagline: data.tagline ? data.tagline : undefined,\n        description: data.description ? data.description : undefined,\n        directors: data.directors ? data.directors : undefined,\n        runtime: data.runtime ? data.runtime : undefined,\n        imdb_url: data.imdb_url ? data.imdb_url : undefined\n      });\n    };\n\n    this.handleAdd = () => {\n      fetch(BASE_URL, {\n        method: 'POST',\n        body: this.formatBody(this.state.movie),\n        headers: {\n          'Accept': 'application/json',\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n        this.props.history.push(\"/movie-details/\" + res.data._self_uri.split(\"/\").slice(-1)[0]);\n      });\n    };\n  }\n\n  renderTitle() {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \" Create Movie \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this);\n  }\n\n  getLinks() {\n    return {\n      back: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"text-secondary\",\n        to: \"/search-movie\",\n        children: \"< Search other movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this)\n    };\n  }\n\n  renderContent() {\n    const {\n      movie\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: fields.map(field => this.formatField(movie, field))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-5 mr-5 mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning btn-block text-white\",\n          type: \"button\",\n          onClick: this.handleAdd,\n          children: \"Add Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(MovieAddPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Link","withRouter","Form","fields","Page","BASE_URL","MovieAddPage","state","movie","title","rating","year","user_rating","votes","metascore","img_url","countries","languages","actors","genre","tagline","description","directors","runtime","imdb_url","formatField","name","prompt","event","newMovie","target","value","setState","uri","formatBody","data","JSON","stringify","undefined","users_rating","handleAdd","fetch","method","body","headers","then","res","json","console","log","props","history","push","_self_uri","split","slice","renderTitle","getLinks","back","renderContent","map","field"],"sources":["/Users/wakasabbasid/Desktop/IMDB/frontend/src/pages/movieAddPage.js"],"sourcesContent":["import React from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport fields from \"../components/fields.json\"\nimport Page from \"./page\";\n\nconst BASE_URL = \"http://localhost:4000/api/movies\";\n\nclass MovieAddPage extends Page {\n    state = {\n        movie: {\n            title: \"\",\n            rating: \"\",\n            year: \"\",\n            user_rating: \"\",\n            votes: \"\",\n            metascore: \"\",\n            img_url: \"\",\n            countries: \"\",\n            languages: \"\",\n            actors: \"\",\n            genre: \"\",\n            tagline: \"\",\n            description: \"\",\n            directors: \"\",\n            runtime: \"\",\n            imdb_url: \"\",\n        },\n    };\n\n    formatField = function (movie, {name, prompt}) {\n        return (\n            <li className=\"list-group-item\"  key={prompt + movie.uri}>\n                <div className=\"row\">\n                    <div className=\"col-3 align-middle\">\n                        <b>{prompt}</b>\n                    </div>\n                    <div className=\"col\">\n                        <Form.Control type=\"text\" placeholder={name} value={movie[name]}\n                                      onChange={(event => {\n                                          let newMovie = {...movie};\n                                          newMovie[name] = event.target.value;\n                                          this.setState({movie: newMovie});\n                                      })}/>\n                    </div>\n                </div>\n            </li>\n        );\n    }\n\n    renderTitle() {\n        return (<h3 className=\"text-center\"> Create Movie </h3>);\n    }\n\n    getLinks() {\n        return {back:<Link className=\"text-secondary\" to=\"/search-movie\">{\"< Search other movies\"}</Link>};\n    }\n\n    formatBody = (data) => {\n        return JSON.stringify({\n            title: data.title,\n            rating: (data.rating) ? data.rating : undefined,\n            year: (data.year) ? data.year : undefined,\n            user_rating: (data.users_rating) ? data.users_rating : undefined,\n            votes: (data.votes) ? data.votes : undefined,\n            metascore: (data.metascore) ? data.metascore : undefined,\n            img_url: (data.img_url) ? data.img_url : undefined,\n            countries: (data.countries) ? data.countries : undefined,\n            languages: (data.languages) ? data.languages : undefined,\n            actors: (data.actors) ? data.actors : undefined,\n            genre: (data.genre) ? data.genre : undefined,\n            tagline: (data.tagline) ? data.tagline : undefined,\n            description: (data.description) ? data.description : undefined,\n            directors: (data.directors) ? data.directors : undefined,\n            runtime: (data.runtime) ? data.runtime : undefined,\n            imdb_url: (data.imdb_url) ? data.imdb_url : undefined,\n        });\n    }\n\n    handleAdd = () => {\n        fetch(BASE_URL, {\n            method: 'POST',\n            body: this.formatBody(this.state.movie),\n            headers: {\n                'Accept': 'application/json',\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(res => res.json()).then(\n            res => {\n                console.log(res);\n                this.props.history.push(\"/movie-details/\" + res.data._self_uri.split(\"/\").slice(-1)[0]);\n            }\n        );\n    }\n\n    renderContent() {\n        const {movie} = this.state;\n        return (\n            <React.Fragment>\n                <ul className=\"list-group\">\n                    {fields.map((field) => this.formatField(movie, field))}\n                </ul>\n                <div className=\"ml-5 mr-5 mt-4\">\n                    <button className=\"btn btn-warning btn-block text-white\" type=\"button\" onClick={this.handleAdd}>Add Movie</button>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(MovieAddPage);"],"mappings":"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"},"metadata":{},"sourceType":"module"}